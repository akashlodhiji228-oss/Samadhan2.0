### Day 17: Build a chat application with real-time features

 
### Steps I Followed

###File: server.js

const express = require('express');
const http = require('http');
const { Server } = require('socket.io');

const app = express();
const server = http.createServer(app);
const io = new Server(server);

app.use(express.static(__dirname + '/public'));

let onlineUsers = 0;

io.on('connection', (socket) => {
  onlineUsers++;
  io.emit('user status', onlineUsers);

  socket.on('chat message', (msg) => {
    io.emit('chat message', msg);
  });

socket.on('disconnect', () => {
    onlineUsers--;
    io.emit('user status', onlineUsers);
  });
});

// Serve the chat frontend
app.get('/', (req, res) => {
  res.sendFile(__dirname + '/public/index.html');
});

const PORT = 3000;
server.listen(PORT, () => {
  console.log(Server running on http://localhost:${PORT});
});


###File: html file

<!DOCTYPE html>
<html>
<head>
  <title>Real-time Chat App</title>
  <style>

#messages { list-style-type: none; margin: 0; padding: 0; }
    #messages li { padding: 5px 10px; }
    #status { margin-bottom: 10px; color: green; }
  </style>
</head>
<body>
  <div id="status"></div>
  <ul id="messages"></ul>
  <form id="form" autocomplete="off">
    <input id="input" /><button>Send</button>
  </form>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();
    const form = document.getElementById('form');
    const input = document.getElementById('input');
    const messages = document.getElementById('messages');
    const status = document.getElementById('status');

    form.addEventListener('submit', function(e) {

e.preventDefault();
      if (input.value) {
        socket.emit('chat message', input.value);
        input.value = '';
      }
    });

    socket.on('chat message', function(msg) {
      const item = document.createElement('li');
      item.textContent = msg;
      messages.appendChild(item);
      window.scrollTo(0, document.body.scrollHeight);
    });

    socket.on('user status', function(num) {
      status.textContent = num + ' user(s) online';
    });
  </script>
</body>
</html>


###For run the code:

node server.js
